kind: pipeline
type: docker
name: automatic-testing

steps:
  - name: restore-cache
    image: golang
    volumes:
      - name: cache
        path: /cache
    commands:
      - git rev-parse --short HEAD
      - mkdir -p /cache/ms-queue/node_modules
      - cp -Rf /cache/ms-queue/node_modules/ node_modules/
    depends_on: [ clone ]

  - name: npm-update
    image: node:12.13.0
    commands:
      - npm install
    depends_on: [ restore-cache ]

  - name: eslint-server
    image: node:12.13.0
    commands:
      - node_modules/eslint/bin/eslint.js  --ext .ts src
    depends_on: [ npm-update ]

  - name: tslint
    image: node:12.13.0
    commands:
      - node_modules/tslint/bin/tslint -p ./ -c src/tslint.json
      - node_modules/typescript/bin/tsc -p ./
      - rm -r dist
    depends_on: [ npm-update ]

  - name: test-server-inmemory
    image: node:12.13.0
    privileged: true
    commands:
      - npm run coverage:inmemory
      - node_modules/.bin/nyc report --reporter=text-lcov > coverage1.lcov;
    depends_on: [ eslint-server, tslint ]

  - name: test-server-mongodb
    image: node:12.13.0
    privileged: true
    commands:
      - PORT=9002 npm run coverage:mongodb
      - node_modules/.bin/nyc report --reporter=text-lcov > coverage2.lcov;
    depends_on: [ eslint-server, tslint ]

  - name: report
    image: node:12.13.0
    privileged: true
    when:
      status:
        - success
        - failure
    commands:
      - ./node_modules/.bin/codecov --token="ea035e13-0f06-415e-86cb-bb8baf8d464e"
    depends_on: [ test-server-inmemory, test-server-mongodb ]

  - name: build-cache
    image: golang
    volumes:
      - name: cache
        path: /cache
    commands:
      - cp -Rf node_modules/ /cache/ms-queue/
    depends_on: [ test-server-inmemory, test-server-mongodb ]

volumes:
  - name: cache
    host:
      path: /home/ubuntu/cureskin/live/drone/cache

